/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TrainsRouteImport } from './routes/trains'
import { Route as ResourcesRouteImport } from './routes/resources'
import { Route as IndexRouteImport } from './routes/index'

const TrainsRoute = TrainsRouteImport.update({
  id: '/trains',
  path: '/trains',
  getParentRoute: () => rootRouteImport,
} as any)
const ResourcesRoute = ResourcesRouteImport.update({
  id: '/resources',
  path: '/resources',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/resources': typeof ResourcesRoute
  '/trains': typeof TrainsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/resources': typeof ResourcesRoute
  '/trains': typeof TrainsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/resources': typeof ResourcesRoute
  '/trains': typeof TrainsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/resources' | '/trains'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/resources' | '/trains'
  id: '__root__' | '/' | '/resources' | '/trains'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ResourcesRoute: typeof ResourcesRoute
  TrainsRoute: typeof TrainsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/trains': {
      id: '/trains'
      path: '/trains'
      fullPath: '/trains'
      preLoaderRoute: typeof TrainsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resources': {
      id: '/resources'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ResourcesRoute: ResourcesRoute,
  TrainsRoute: TrainsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
